#
# Задача "Рассылка писем":
#
#   Создайте функцию send_email, которая принимает 2 обычных
#   аргумента:
#   сообщение и получатель и 1 обязательно именованный аргумент
#   со значением по умолчанию - отправитель.
#
#   Внутри функции реализовать следующую логику:
#   1.	Проверка на корректность e-mail отправителя и получателя.
#   2.	Проверка на отправку самому себе.
#   3.	Проверка на отправителя по умолчанию.
#
#   Пункты задачи:
#   1.	Создайте функцию send_email, которая принимает 2 обычных
#     аргумента: message(сообщение), recipient(получатель) и
#     1 обязательно именованный аргумент со значением по умолчанию
#     sender = "university.help@gmail.com".
#   2.	Если строки recipient и sender не содержит "@" или
#     не оканчивается на ".com"/".ru"/".net", то вывести на экран
#     (в консоль) строку:
#     "Невозможно отправить письмо с адреса <sender>
#     на адрес <recipient>".
#   3.	Если же sender и recipient совпадают, то вывести
#     "Нельзя отправить письмо самому себе!"
#   4.	Если же отправитель по умолчанию - university.help@gmail.com,
#     то вывести сообщение:
#     "Письмо успешно отправлено с адреса <sender>
#     на адрес <recipient>."
#   5.	В противном случае вывести сообщение:
#     "НЕСТАНДАРТНЫЙ ОТПРАВИТЕЛЬ! Письмо отправлено с адреса
#     <sender> на адрес <recipient>."
#   6.	Здесь <sender> и <recipient> - значения хранящиеся в этих
#     переменных.
#   7.	За один вызов функции выводится только одно и перечисленных уведомлений!
#     Проверки перечислены по мере выполнения.
#
#   Примечания:
#   1.	Обязательно именованные аргументы отделяются от остальных символом
#       "*" перед ними.
# 2.	Именованные аргументы всегда идут после позиционных.
#
def send_email(message, recipient,* , sender = "university.help@gmail.com") : #
    if ("@" not in (recipient or sender)) or not sender.endswith(tuple([".com", ".ru", ".net"])) or not recipient.endswith(tuple([".com", ".ru", ".net"])) : #
        print(f"Невозможно отправить письмо с адреса {sender} на адрес {recipient}") #
    elif recipient == sender : #
        print("Нельзя отправить письмо самому себе!") #
    elif sender == "university.help@gmail.com":
        print(f"Письмо успешно отправлено с адреса {sender} на адрес {recipient}.") #
    else : #
         print(f"НЕСТАНДАРТНЫЙ ОТПРАВИТЕЛЬ! Письмо отправлено с адреса {sender} на адрес {recipient}.")
#
#
send_email('Это сообщение для проверки связи', 'vasyok1337@gmail.com') #
send_email('Вы видите это сообщение как лучший студент курса!', 'urban.fan@mail.ru', sender='urban.info@gmail.com')
send_email('Пожалуйста, исправьте задание', 'urban.student@mail.ru', sender='urban.teacher@mail.uk')
send_email('Напоминаю самому себе о вебинаре', 'urban.teacher@mail.ru', sender='urban.teacher@mail.ru')
#
#
#
#   Пример результата выполнения программы:
#
# Вывод на консоль:
#
# Письмо успешно отправлено с адреса university.help@gmail.com на адрес vasyok1337@gmail.com
# НЕСТАНДАРТНЫЙ ОТПРАВИТЕЛЬ! Письмо отправлено с адреса urban.info@gmail.com на адрес urban.fan@mail.ru
# Невозможно отправить письмо с адреса urban.teacher@mail.uk на адрес urban.student@mail.ru
# Нельзя отправить письмо самому себе!
#
#  конец задачи
#
