# Задача "Распаковка":

# 1.Функция с параметрами по умолчанию:
#
#     Создайте функцию print_params(a = 1, b = 'строка', c = True),
#       которая принимает три параметра со значениями по умолчанию
#       (например сейчас это: 1, 'строка', True).
#     Функция должна выводить эти параметры.
#     Вызовите функцию print_params с разным количеством аргументов,
#       включая вызов без аргументов.
#     Проверьте, работают ли вызовы print_params(b = 25)
#     print_params(c = [1,2,3])
#
def print_params(a = 1, b = 'строка', c = True) :  #
    print(a,b,c)
#
#
#print_params() # вывод: 1 строка True
#print_params(a = 'один') # вывод: один строка True
#print_params('один', 'два') # вывод: один два True
#print_params('один', 'два', 'три') # вывод: один два три
#print_params('один', 'два', 'три', 'четыре') # вывод: TypeError: print_params() takes from 0 to 3 positional arguments but 4 were given
#
#print_params(b = 25) # вывод: 1 25 True
#print_params(c = [1,2,3]) # вывод: 1 строка [1, 2, 3]
#
#
# 2.Распаковка параметров:
#
#     Создайте список values_list с тремя элементами разных типов.
#     Создайте словарь values_dict с тремя ключами, соответствующими
#       параметрам функции print_params, и значениями разных типов.
#     Передайте values_list и values_dict в функцию print_params,
#       используя распаковку параметров (* для списка и ** для словаря).
#
#values_list = ['один', 2, True] #
#values_dict = {'a' : 'один', 'b' : 2, 'c' : True} #
#print_params(*values_list) # вывод: один 2 True
#print_params(**values_dict) # вывод: один 2 True
#
#
# 3.Распаковка + отдельные параметры:
#
#     Создайте список values_list_2 с двумя элементами разных типов
#     Проверьте, работает ли print_params(*values_list_2, 42)
#
#values_list_2 = ['один', 2] #
#print_params(*values_list_2, 42) # вывод: один 2 42
# Пример результата выполнения программы:
# Исходный код:
values_list_2 = [54.32, 'Строка' ]
print_params(*values_list_2, 42)
# Вывод на консоль:
# 54.32 'Строка' 42
#
#
# конец задания
#
#

